def test_matrix_divided():
    # Test valid input
    matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    result = matrix_divided(matrix, 2)
    assert result == [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

    # Test matrix with floats
    matrix = [[1.5, 2.5], [3.5, 4.5]]
    result = matrix_divided(matrix, 0.5)
    assert result == [[3.0, 5.0], [7.0, 9.0]]

    # Test matrix with negative numbers
    matrix = [[-1, -2], [-3, -4]]
    result = matrix_divided(matrix, -1)
    assert result == [[1.0, 2.0], [3.0, 4.0]]

    # Test invalid matrix (not list of lists)
    try:
        matrix_divided([1, 2, 3], 2)
    except TypeError as e:
        assert str(e) == "matrix must be a matrix (list of lists) of integers/floats"

    # Test invalid matrix (rows with different sizes)
    try:
        matrix_divided([[1, 2, 3], [4, 5], [6, 7, 8]], 2)
    except TypeError as e:
        assert str(e) == "Each row of the matrix must have the same size"

    # Test invalid div (not a number)
    try:
        matrix_divided([[1, 2], [3, 4]], "2")
    except TypeError as e:
        assert str(e) == "div must be a number"

    # Test div by zero
    try:
        matrix_divided([[1, 2], [3, 4]], 0)
    except ZeroDivisionError as e:
        assert str(e) == "division by zero"
